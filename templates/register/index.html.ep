% layout 'bootstrap';
% title 'Jognavi - ジョギング情報サイト';
% content_for head => begin
<style type="text/css">
    #map_canvas { width: 360px;    height : 360px;}
    #map_canvas label { width: auto;    display:inline;}
    #map_canvas img {  max-width: none;}
    #pano_canvas { width: 300px;    height : 300px;}
    #pano_canvas label { width: auto;    display:inline;}
    #pano_canvas img { max-width: none;}
    #route_canvas { width: 240px;    height : 240px;}
    #route_canvas label { width: auto;    display:inline;}
    #route_canvas img { max-width: none;}
    #custom_bar {  position:absolute; margin-left: 68px; z-index:2;}

</style>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?<% if ($self->app->mode eq "production"){ %>key=AIzaSyB9GX6BiQYfWNMCa7v9OO37TE4Fl9zr2h0&<% } %>libraries=geometry&sensor=false"></script>
  <script type="text/javascript" src="js/mypolyline.js"></script>
  <script type="text/javascript" src="js/mymarker.js"></script>
  <script type="text/javascript">

    var geocoder, map, path = [], service = new google.maps.DirectionsService(), shiftPressed = false, poly, panorama;

    //コントロールが地図に追加されたときに呼び出される
    //主に初期化のために用いられる
    function HomeControl(controlDiv, map) {
        
      //フォーム作成
      var customPanel = document.createElement("div");
      customPanel.innerHTML ="<form> " + 
           "<TABLE style='WIDTH: auto'><TBODY><TR><TD>" +
           "<INPUT id='msg' name='msg' size=22 value='東京都'></TD>" + 
           "<TD><INPUT type='button' onclick='javascript:search(this.form.msg.value);' " +
           " value='ジャンプ'>" + 
           "<TD><INPUT type='button' onclick='javascript:deletePolylines();' " +
           " value='<<'>" + 
           "<TD><INPUT type='button' onclick='javascript:deletePolyline();' " +
           " value='<'>" + 
           "<TD><INPUT type='button' onclick='javascript:connectToStart();' " +
           " value='Connect'>" + 
           "</TD></TR></TBODY></TABLE>" + 
           "</FORM>"; 

      //コンテナに追加
      controlDiv.appendChild(customPanel);
        
    }
    var start_marker;
    var start_icon = "/img/start-race.png";
    var startimg = new google.maps.MarkerImage(start_icon,
              new google.maps.Size(32, 37),
              new google.maps.Point(0, 0),
              new google.maps.Point(16, 37)
    );
    function deletePolyline() {
      if (path.length > 0 ){
        if (path.length == 1 ){
          start_marker.setMap(null);
        }
        path.pop();
        poly.setPath(path);
        document.getElementById("route_canvas").innerHTML = poly.inKm() + "km";
      }
    }
    function deletePolylines() {
      if (path.length > 0 ){
        start_marker.setMap(null);
        path = [];
        poly.setPath(path);
        document.getElementById("route_canvas").innerHTML = poly.inKm() + "km";
      }
    }
    function connectToStart() {
      if (path.length > 0 ){
        path = path.concat(path[0]);
        poly.setPath(path);
        document.getElementById("route_canvas").innerHTML = poly.inKm() + "km";
        var run_head = google.maps.geometry.spherical.computeHeading(path[path.length-2],path[path.length-1]);
        panorama.setPov({heading: run_head, pitch : 10});
        panorama.setPosition(path[0]);
      }
    }
    function search(address) {
      geocoder.geocode({"address": address}, function(results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
          map.setCenter(results[0].geometry.location);
        } else {}
      });
    }
    function to_json(path) {
      var json = "{" +
      "\"distance\" : " + poly.inKm() + "," +
      "\"path\" : [";
      for (var i = 0; i < path.length; i++) {
        if ( i > 0 ) {
          json = json + ",";
        }
        json = json + "{\"lat\":" + path[i].lat() + ",\"lng\":" + path[i].lng() + "}";
      }
      json = json + "]}";
      return json;
    }
    function register() {
      var course_name = $.trim($("#course_name").val());
      if (course_name == ""){
        $("#route_canvas").html("コース名が入力されていません。");
        return false;
      }
      if (course_name.length > 20){
        $("#route_canvas").html("コース名は20文字以内で入力してください。");
        return false;
      }
      if (path.length == 0 ){
        $("#route_canvas").html("コースが設定されていません。");
        return false;
      }
      var course_type = $('input[name="course_type"]:checked').val();;
      if (course_type == "2" && (path.length < 2 || !path[0].equals(path[path.length-1]))){
        $("#route_canvas").html("スタート地点とゴール地点が不一致です。");
        return false;
      }
      var description = $.trim($("#description").val());
      if (description.length < 100 ){
        $("#route_canvas").html("説明文は100文字以上入力してください。");
        return false;
      }
      if (description.length > 400 ){
        $("#route_canvas").html("説明文は400文字以内で入力してください。");
        return false;
      }
      $("#json_data").val(to_json(path));
      $("#start_address").val(poly.getAddress());
    }
    google.maps.event.addDomListener(document, "keydown", function() { shiftPressed = true; });
    google.maps.event.addDomListener(document, "keyup", function() { shiftPressed = false; });
    google.maps.event.addDomListener(    window  , 'load'  , Init);
    function Init() {
      var json_path = <%= $self->render(json=> $route_path, partial => 1) %>;
      for (var i = 0; i < json_path.length; i++) {
        var latlng = new google.maps.LatLng(json_path[i].lat, json_path[i].lng);
        path.push (latlng);
      }
      var myOptions = {
        zoom: 17,
        center: (path.length > 0 ) ? path[0] : new google.maps.LatLng(35.68923, 139.752274),
        mapTypeId: google.maps.MapTypeId.ROADMAP,
        mapTypeControl: false,
        disableDoubleClickZoom: true,
        scrollwheel: false,
        draggableCursor: "crosshair"
      }
      map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
      // Create the DIV to hold the control and call the HomeControl() constructor
      // passing in this DIV.
      var homeControlDiv = document.createElement('div');
      var homeControl = new HomeControl(homeControlDiv, map);
      homeControlDiv.index = 1;
      map.controls[google.maps.ControlPosition.TOP_RIGHT].push(homeControlDiv);
      geocoder = new google.maps.Geocoder();
      poly = new MyPolyline({ map: map , strokeColor: "#CC33FF"});
      poly.setPath(path);
      document.getElementById("route_canvas").innerHTML = poly.inKm() + "km";
      var icoimg = new google.maps.MarkerImage(start_icon,
              new google.maps.Size(32, 37),
              new google.maps.Point(0, 0),
              new google.maps.Point(16, 37)
      );
      start_marker = new google.maps.Marker({position: path[0], map: map, title: "start", icon: startimg});
      var panoramaOptions = {    position: (path.length > 0 ) ? path[0] : new google.maps.LatLng(35.68923, 139.752274),
      pov: {      heading: (path.length > 1 ) ? google.maps.geometry.spherical.computeHeading(path[0],path[1]) : 34,      pitch: 10    }  };
      panorama = new  google.maps.StreetViewPanorama(document.getElementById('pano_canvas'),panoramaOptions);
      map.setStreetView(panorama);
      google.maps.event.addListener(map, "click", function(evt) {
        if (shiftPressed || path.length == 0) {
          map.setCenter(evt.latLng);
          panorama.setPosition(evt.latLng);
          path.push(evt.latLng);
          var icoimg = new google.maps.MarkerImage(start_icon,
            new google.maps.Size(32, 37),
            new google.maps.Point(0, 0),
            new google.maps.Point(16, 37)
          );
          start_marker = new google.maps.Marker({position: evt.latLng, map: map, title: "start", icon: startimg});
          if (path.length == 1) {
            poly = new MyPolyline({ map: map , strokeColor: "#CC33FF"});
            geocoder.geocode({'latLng': evt.latLng}, function(results, status) {
              if (status == google.maps.GeocoderStatus.OK) {      
                if (results[1]) {        
                  var address = results[1].formatted_address.replace("日本,","");
                  poly.setAddress(address);
                }
              }
            });

          }
          poly.setPath(path);
        } 
        else {
          service.route({ origin: path[path.length - 1], destination: evt.latLng, travelMode: google.maps.DirectionsTravelMode.WALKING }, function(result, status) {
            if (status == google.maps.DirectionsStatus.OK) {
              map.setCenter(evt.latLng);
              panorama.setPosition(evt.latLng);
              path = path.concat(result.routes[0].overview_path);
              poly.setPath(path);
              document.getElementById("route_canvas").innerHTML = poly.inKm() + "km";
              var run_head = google.maps.geometry.spherical.computeHeading(path[path.length-2],path[path.length-1]);
              //var pov = new google.maps.StreetViewPov({heading: run_head, pitch : 10});
              panorama.setPov({heading: run_head, pitch : 10});
            }
          });
        }
      });
    }
</script>
% end
<div class="row">
  <div id="map_canvas" class="col-xs-6 col-sm-6 col-md-6"></div>
  <div class="col-xs-6 col-sm-3 col-md-3">
    <form role="form" method="post" action="/register" onsubmit="return register();">
      <div class="form-group">
        <label class=control-label for=textinput>コース名:</label>
        <input id="course_name" class="form-control" type="text" name="course_name" value="<%= $self->flash("course_name") %>">
      </div>
      <div class="form-group">
        <label class=control-label for=textinput>紹介文:</label>
        <textarea class="form-control" rows="2" id="description" name="description" value="<%= $self->flash("description") %>"></textarea>
      </div>
      <div class="form-group">
        <label class="course-type-label control-label" for=radios>コース種別:</label>
        <label class="radio-inline" for=radios-0><input id=radios-0 value="1" <% if (  ! defined $self->flash("course_type") || "1" eq $self->flash("course_type") ) { %><%= "checked" %><% } %> type=radio name=course_type> 片道 </label>
        <label class="radio-inline" for=radios-1><input id=radios-1 <% if (defined $self->flash("course_type") && "2" eq $self->flash("course_type")) { %><%= "checked" %><% } %> value=2 type=radio name=course_type> 周回 </label>
      </div>
      <div class="form-group">
        <button class="route-register-button btn btn-primary" name="" type="submit">登録</button>
      </div>
      <input id="json_data" type="hidden" name ="data"/>
      <input id="start_address" type="hidden" name ="start_address" value="<%= $self->flash("start_address") %>"/>
    </form>
  </div>
  <div id="pano_canvas" class="col-xs-12 col-sm-3 col-md-3"></div>
</div>
<div class="row">
  <div id="route_canvas" class="col-xs-12 col-sm-12 col-md-12"></div>
</div>
  